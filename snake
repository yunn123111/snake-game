<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>贪吃蛇游戏</title>
    <style>
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background-color: #282c34;
            color: #ffffff;
            font-family: Arial, sans-serif;
        }
        canvas {
            border: 2px solid #ffffff;
            background-color: #000000;
        }
    </style>
</head>
<body>
    <canvas id="gameCanvas" width="400" height="400"></canvas>
    <script>
        const canvas = document.getElementById("gameCanvas");
        const ctx = canvas.getContext("2d");
        const boxSize = 20;

        let snake = [{ x: 200, y: 200 }];
        let direction = "RIGHT";
        let food = {
            x: Math.floor(Math.random() * (canvas.width / boxSize)) * boxSize,
            y: Math.floor(Math.random() * (canvas.height / boxSize)) * boxSize,
        };
        let score = 0;

        // 绘制蛇
        function drawSnake() {
            ctx.fillStyle = "lime";
            snake.forEach((segment) => {
                ctx.fillRect(segment.x, segment.y, boxSize, boxSize);
                ctx.strokeStyle = "black";
                ctx.strokeRect(segment.x, segment.y, boxSize, boxSize);
            });
        }

        // 绘制食物
        function drawFood() {
            ctx.fillStyle = "red";
            ctx.fillRect(food.x, food.y, boxSize, boxSize);
        }

        // 更新蛇的位置
        function updateSnake() {
            const head = { x: snake[0].x, y: snake[0].y };

            if (direction === "LEFT") head.x -= boxSize;
            if (direction === "RIGHT") head.x += boxSize;
            if (direction === "UP") head.y -= boxSize;
            if (direction === "DOWN") head.y += boxSize;

            snake.unshift(head);

            // 检查是否吃到食物
            if (head.x === food.x && head.y === food.y) {
                score++;
                food = {
                    x: Math.floor(Math.random() * (canvas.width / boxSize)) * boxSize,
                    y: Math.floor(Math.random() * (canvas.height / boxSize)) * boxSize,
                };
            } else {
                snake.pop();
            }
        }

        // 检查游戏是否结束
        function checkGameOver() {
            const head = snake[0];
            // 撞到边界
            if (head.x < 0 || head.x >= canvas.width || head.y < 0 || head.y >= canvas.height) {
                return true;
            }
            // 撞到自己
            for (let i = 1; i < snake.length; i++) {
                if (head.x === snake[i].x && head.y === snake[i].y) {
                    return true;
                }
            }
            return false;
        }

        // 更新游戏
        function updateGame() {
            if (checkGameOver()) {
                alert("游戏结束！得分: " + score);
                document.location.reload();
            }
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            drawFood();
            updateSnake();
            drawSnake();
            document.getElementById("score").textContent = score;
        }

        // 监听键盘事件
        document.addEventListener("keydown", (event) => {
            if (event.key === "ArrowLeft" && direction !== "RIGHT") direction = "LEFT";
            if (event.key === "ArrowRight" && direction !== "LEFT") direction = "RIGHT";
            if (event.key === "ArrowUp" && direction !== "DOWN") direction = "UP";
            if (event.key === "ArrowDown" && direction !== "UP") direction = "DOWN";
        });

        // 游戏主循环
        setInterval(updateGame, 100);
    </script>
</body>
</html>
